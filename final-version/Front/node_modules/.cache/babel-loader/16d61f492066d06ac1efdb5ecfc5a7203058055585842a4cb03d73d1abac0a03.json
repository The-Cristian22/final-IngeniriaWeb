{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:4000/api'; // Verifica que el puerto y dominio sean correctos\n\nexport const getProducts = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/products`);\n    return response.data.products;\n  } catch (error) {\n    console.error(\"Error al obtener productos\", error);\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    return response.data.token;\n  } catch (error) {\n    console.error(\"Error de autenticación\", error);\n    throw error;\n  }\n};\nexport const addToCart = async (token, productId, quantity) => {\n  try {\n    const response = await axios.post(`${API_URL}/cart/add`, {\n      productId,\n      quantity\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al agregar al carrito\", error);\n    throw error;\n  }\n};\n\n// Otras funciones como removeFromCart o getCart se pueden definir de manera similar.","map":{"version":3,"names":["axios","API_URL","getProducts","response","get","data","products","error","console","login","email","password","post","token","addToCart","productId","quantity","headers","Authorization"],"sources":["C:/Users/crist/Desktop/cristian/estudio/U/Programacion En Plataformas Moviles II/actividad final/final-version/Front/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:4000/api'; // Verifica que el puerto y dominio sean correctos\r\n\r\nexport const getProducts = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/products`);\r\n        return response.data.products;\r\n    } catch (error) {\r\n        console.error(\"Error al obtener productos\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n        return response.data.token;\r\n    } catch (error) {\r\n        console.error(\"Error de autenticación\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const addToCart = async (token, productId, quantity) => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${API_URL}/cart/add`,\r\n            { productId, quantity },\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error al agregar al carrito\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Otras funciones como removeFromCart o getCart se pueden definir de manera similar.\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,WAAW,CAAC;IACvD,OAAOE,QAAQ,CAACE,IAAI,CAACC,QAAQ;EACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC5C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,aAAa,EAAE;MAAES,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC/E,OAAOR,QAAQ,CAACE,IAAI,CAACQ,KAAK;EAC9B,CAAC,CAAC,OAAON,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAAA,CAAOD,KAAK,EAAEE,SAAS,EAAEC,QAAQ,KAAK;EAC3D,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAC7B,GAAGX,OAAO,WAAW,EACrB;MAAEc,SAAS;MAAEC;IAAS,CAAC,EACvB;MAAEC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUL,KAAK;MAAG;IAAE,CACpD,CAAC;IACD,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}